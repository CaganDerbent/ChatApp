<!DOCTYPE html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChatApp</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Quicksand&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.1/socket.io.js" integrity="sha512-Z6C1p1NIexPj5MsVUunW4pg7uMX6/TT3CUVldmjXx2kpip1eZcrAnxIusDxyFIikyM9A61zOVNgvLr/TGudOQg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Quicksand', sans-serif;
        }
        input:focus{
            outline: 0;
            
        }
        body{
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.dev/svgjs' width='1440' height='560' preserveAspectRatio='none' viewBox='0 0 1440 560'%3e%3cg mask='url(%26quot%3b%23SvgjsMask1000%26quot%3b)' fill='none'%3e%3crect width='1440' height='560' x='0' y='0' fill='%231a4e83'%3e%3c/rect%3e%3cpath d='M0 0L781.02 0L0 957.08z' filter='url(%23SvgjsFilter1001)' fill='%232d409e'%3e%3c/path%3e%3cpath d='M0 560L781.02 560L0 -397.08000000000004z' filter='url(%23SvgjsFilter1001)' fill='%232d409e'%3e%3c/path%3e%3cpath d='M1440 560L658.98 560L1440 -397.08000000000004z' filter='url(%23SvgjsFilter1001)' fill='%232d409e'%3e%3c/path%3e%3cpath d='M1440 0L658.98 0L1440 957.08z' filter='url(%23SvgjsFilter1001)' fill='%232d409e'%3e%3c/path%3e%3c/g%3e%3cdefs%3e%3cmask id='SvgjsMask1000'%3e%3crect width='1440' height='560' fill='white'%3e%3c/rect%3e%3c/mask%3e%3cfilter height='130%25' id='SvgjsFilter1001'%3e%3cfeGaussianBlur in='SourceAlpha' stdDeviation='5' result='TopLeftG'%3e%3c/feGaussianBlur%3e%3cfeOffset dx='-5' dy='-5' in='TopLeftG' result='TopLeftO'%3e%3c/feOffset%3e%3cfeComponentTransfer in='TopLeftO' result='TopLeftC'%3e%3cfeFuncA type='linear' slope='0.7'%3e%3c/feFuncA%3e%3c/feComponentTransfer%3e%3cfeGaussianBlur in='SourceAlpha' stdDeviation='5' result='TopRightG'%3e%3c/feGaussianBlur%3e%3cfeOffset dx='5' dy='-5' in='TopRightG' result='TopRightO'%3e%3c/feOffset%3e%3cfeComponentTransfer in='TopRightO' result='TopRightC'%3e%3cfeFuncA type='linear' slope='0.7'%3e%3c/feFuncA%3e%3c/feComponentTransfer%3e%3cfeGaussianBlur in='SourceAlpha' stdDeviation='5' result='BottomLeftG'%3e%3c/feGaussianBlur%3e%3cfeOffset dx='-5' dy='5' in='BottomLeftG' result='BottomLeftO'%3e%3c/feOffset%3e%3cfeComponentTransfer in='BottomLeftO' result='BottomLeftC'%3e%3cfeFuncA type='linear' slope='0.7'%3e%3c/feFuncA%3e%3c/feComponentTransfer%3e%3cfeGaussianBlur in='SourceAlpha' stdDeviation='5' result='BottomRightG'%3e%3c/feGaussianBlur%3e%3cfeOffset dx='5' dy='5' in='BottomRightG' result='BottomRightO'%3e%3c/feOffset%3e%3cfeComponentTransfer in='BottomRightO' result='BottomRightC'%3e%3cfeFuncA type='linear' slope='0.7'%3e%3c/feFuncA%3e%3c/feComponentTransfer%3e%3cfeMerge%3e%3cfeMergeNode in='TopLeftC'%3e%3c/feMergeNode%3e%3cfeMergeNode in='TopRightC'%3e%3c/feMergeNode%3e%3cfeMergeNode in='BottomLeftC'%3e%3c/feMergeNode%3e%3cfeMergeNode in='BottomRightC'%3e%3c/feMergeNode%3e%3cfeMergeNode in='SourceGraphic'%3e%3c/feMergeNode%3e%3c/feMerge%3e%3c/filter%3e%3c/defs%3e%3c/svg%3e");
        }
        button:focus{
            outline: 0;
        }
        h2{
            box-shadow: rgba(0, 0, 0, 0.35) 0px -50px 36px -28px inset;
            font-size: 24px;
            padding: 10px 20px;
            color: #fff;
            background-color: rgb(85, 85, 224);
            border-radius: 0px 0px 5px 5px;
        }
        h2 span {
            margin-left: 100px;
            font-size: 18px;
        }
        #chatwrap{
            background-color: rgb(255, 255, 255);
            width: 600px;
            margin: 30px auto;
            box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;
            height: 720px;
           
        }
        #chatwindow{
            background-color: aliceblue;
            height: 400px;
            overflow-y: auto;
            border-bottom: 1px solid black;
        }
        #output p {
            position: relative;
            font-size: 15px;
            padding: 12px;
            display: flex;
        }
        #output p span{
            position: absolute;
            right: 5%;
        }
        #output p:nth-child(even){
            background-color: rgb(221, 221, 221);
        }
        #feedback p{
            font-size: 15px;
            padding: 12px;
        }
        #output strong{
            color: rgb(1, 1, 5);
        }

        input{
            margin-left: 8px;
            border-radius: 10px;
            background-color: whitesmoke;
            margin-top: 10px;
            border: 1px solid black;
            padding: 10px 20px;
            border: 0;
            border-collapse:separate;
            width: 100%;
            font-size: 15px;
        }
        button{
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            border-radius: 10px;
            margin-top: 10px;
            position: absolute;
            right: 2%;
            background-color: rgb(85, 85, 224);
            color: white;
            border: 0;
            width: 100%;
            padding: 12px 0px;
            font-size: 17px;
            height: 40px;
        }
        button:hover{
            background-color: rgb(50, 50, 153);
            cursor: pointer;
        }
        button:active{
            background-color: rgb(21, 21, 145);
        }
        #join{
            text-align: center;
            font-size: 17px;
            width: 10%;
            height: 40px;
        }
        #room{
            width: 85%;
            height: 40px;

        }
        #x{
            position: relative;
            display: flex;
            flex-direction: row;
        }
        #y{
            position: relative;
            display: flex;
            flex-direction: row;
        }
        #submit{
            text-align: center;
            font-size: 17px;
            width: 10%;
            height: 40px;

        }
        #message{
            width: 85%;
        }
        #username{
            background-color: whitesmoke;
            width: 85%;
    
        }
        #userlist{
            position: relative;
            width: 100%;
            height: 40px;
            background-color: rgb(226, 225, 225);
            display: flex;
            align-items: center;
            border-radius: 5px 5px 5px 5px;
        }
        #userlist span{
            position: absolute;
            left: 2%;
        }
        #icon1{
            position: absolute;
            right: 2%;
        }
        #userlist:hover{
            cursor: pointer;
        }
        #listwrap p{
    
            position: relative;
            font-size: 15px;
            padding: 12px;
            display: flex;
            flex-direction: column;
        }
        #listwrap {
            display: flex;
            flex-direction: column;
            height: 300px;
            max-width: 600px;
            margin: 30px auto;
            overflow-y: auto;
        }
        #info{
            margin-top: 10px;
            display: flex;
            flex-direction: column;
            position: relative;
            width: 580px;
            margin-bottom: 10px;
        }
        .sj{
            margin-left: 8px;
            box-shadow: rgba(0, 0, 0, 0.35) 0px -50px 36px -28px inset;
            background-color:rgb(85, 85, 224);
            color: whitesmoke;
            margin-top: 10px;
            border-radius: 10px;
            padding: 10px 20px;
            width: 100%;
            height: 40px;
        }
        .sj span{
            left: 3%;
        }
        ::-webkit-scrollbar {
            width: 10px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        ::-webkit-scrollbar-thumb {
            background: #a3a2a2;
            border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #8a8989;
        }
        .footer{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 100%;
  box-shadow: rgba(0, 0, 0, 0.35) 0px -50px 36px -28px inset;
  background-color:rgb(85, 85, 224);
  height: 50px;
  bottom: 0%;


}
.fa-brands{
  margin-left: 40px;
  margin-right: 40px;
}
@media screen and (max-width:600px) {
    
    #chatwrap{
            background-color: rgb(255, 255, 255);
            width: 350px;
            margin: 30px auto;
            box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;
            height: 620px;
           
        }
        #info{
            margin-top: 10px;
            display: flex;
            flex-direction: column;
            position: relative;
            width: 335px;
            margin-bottom: 10px;
        }

        #x{
            position: relative;
            display: flex;
            flex-direction: row;
            width: 320px;
        }
        #y{
            position: relative;
            display: flex;
            flex-direction: row;
            width: 320px;
        }
        #username{
            width: 270px;
        }

        #join{
            margin-left: 20px;
            text-align: center;
            font-size: 17px;
            width: 60px;
            height: 40px;
        }
        #submit{
            text-align: center;
            font-size: 17px;
            width: 60px;
            height: 40px;

        }
        button{
           position: absolute;
           right: -25px;
        }
        #chatwindow{
            background-color: aliceblue;
            height: 300px;
            overflow-y: auto;
            border-bottom: 1px solid black;
        }
      

       
    
}
       
        
    </style>
</head>
<body>
    <div id="chatwrap">
   
        <h2>ChatApp</h2>
        
        <div id="chatwindow">
            <div id="output"></div>
            <div id="feedback"></div>
        </div>
        <input type="text" id="username" placeholder="Username">
        <div id="y">
            <input type="text" id="message" placeholder="Message">
            <button id="submit">Send</button>
        </div>
        <div id="x">
            <input type="text" placeholder="Room" id="room">
            <button id="join">Join</button>
        </div>
        <div id="info">
            <div id="socketID" class="sj"><span></span> </div>
            <div id="roomID" class="sj"><span>Room: None</span> </div>
        </div>
    </div>
    <div class="footer">
        <a href="https://github.com/CaganDerbent"><i class="fa-brands fa-github fa-2xl" style="color: whitesmoke;"></i></a>
        <a href="https://www.linkedin.com/in/cagan-derbent-61536727a/"><i class="fa-brands fa-linkedin fa-2xl" style="color: whitesmoke;"></i></a>
    </div>
    <script>
    const socket = io('http://localhost:3000')






const sender = document.getElementById('sender')
const username = document.getElementById('username')
const message = document.getElementById('message')
const submit = document.getElementById('submit')
const output = document.getElementById('output')
const feedback = document.getElementById('feedback')
const id = document.getElementById('socketID')
const roomID = document.getElementById('roomID')
const userlist = document.getElementById('userlist')
const listwrap = document.getElementById('listwrap')

const socketID = document.getElementById('socketID')
const roomInput = document.getElementById('room')
const joinButton = document.getElementById('join')

const userJoinStatus = {};




joinButton.addEventListener("click",()=>{
    const room =  roomInput.value
    if (room === ''){
        console.log("room value empty")
    }
    else{
        socket.emit('join-room',room,id)
        if (userJoinStatus[id]) {
             userJoinStatus[id] = false;}

        if (room === ''){
            roomID.innerHTML = 'Room: '+ 'none'

        }
        else{
            roomID.innerHTML = 'Room: '+room

        }
        roomID.innerHTML = 'Room: '+room
        output.innerHTML += '<p>You joined the room: ' + room + '</p>';

    }

})




submit.addEventListener('click',()=>{
    const room = roomInput.value
    const messagevalue = message.value
    const usernamevalue = username.value
    if(messagevalue === '' || usernamevalue === ''){
        console.log("message value empty")
        
    }
    else{
        socket.emit('chat',messagevalue,usernamevalue,room)

        username.disabled = true;
        message.value = ''

    }
})

message.addEventListener('keydown',event =>{
    const room = roomInput.value
    const messagevalue = message.value
    const usernamevalue = username.value
    if(messagevalue === '' || usernamevalue === ''){
        console.log("message value empty")
        
    }
    else{
        if(event.keyCode === 13){
        event.preventDefault()
        socket.emit('chat',messagevalue,usernamevalue,room)
       
    
    username.disabled = true;
    message.value = ''
    }

    }
    
})


socket.on('connectionID',(connectionID,array)=>{ //kendine
    date = new Date()
    console.log(date)
    let hours = date.getHours()
    let minutes = date.getMinutes()
    if(minutes === 0  || (minutes === 1 ) || (minutes === 2) || (minutes === 3)|| (minutes === 4) || (minutes === 5) || (minutes ===6) || (minutes === 7)|| (minutes === 8) || (minutes === 9) ){
        minutes = "0"+minutes
    }
    console.log(hours +" "+ minutes)
    socketID.innerHTML += "ID: "+connectionID
    output.innerHTML += '<p>' + connectionID + "  " + 'connected.' + '<span>' + hours + ":" + minutes  + '</span>' + '</p>'})
let i = 0
socket.on('userConnected', (userId,array) => { // kendi hariç herkese

    date = new Date()
    console.log(date)
    let hours = date.getHours()
    let minutes = date.getMinutes()
    if(minutes === 0  || (minutes === 1 ) || (minutes === 2) || (minutes === 3)|| (minutes === 4) || (minutes === 5) || (minutes ===6) || (minutes === 7)|| (minutes === 8) || (minutes === 9) ){
        minutes = "0"+minutes
    }
    output.innerHTML += '<p>' + userId + "  " + 'connected.' + '<span>' + hours + ":" + minutes  + '</span>' + '</p>'
});

socket.on('userDisconnected', (userId) => {

    date = new Date()
    console.log(date)
    let hours = date.getHours()
    let minutes = date.getMinutes()
    if(minutes === 0  || (minutes === 1 ) || (minutes === 2) || (minutes === 3)|| (minutes === 4) || (minutes === 5) || (minutes ===6) || (minutes === 7)|| (minutes === 8) || (minutes === 9) ){
        minutes = "0"+minutes
    }
    console.log(`User disconnected: ${userId}`);
    output.innerHTML += '<p>' + userId + "  " + 'disconnected.' + '<span>' + hours + ":" + minutes  + '</span>' + '</p>';
    
});


socket.on('chat', (usernamevalue, messagevalue, userID, room) => {
  date = new Date();
  console.log(date);
  let hours = date.getHours();
  let minutes = date.getMinutes();
  if (minutes < 10) {
    minutes = "0" + minutes;
  }
  console.log(hours + " " + minutes);

  room = roomInput.value


  

  if (!userJoinStatus[userID]) {
    userJoinStatus[userID] = true;
    if(room === ''){
        output.innerHTML += '<p>' + userID + " joined as " + messagevalue + " (broadcast)" + '<span>' + hours + ":" + minutes + '</span>' + "." + '</p>';
    }
    else{
        output.innerHTML += '<p>' + userID + " joined as " + messagevalue + " Room: "+ room + '<span>' + hours + ":" + minutes + '</span>' + "." + '</p>';

    }
  }


  output.innerHTML += '<p><strong>' + messagevalue + ':   </strong>  ' + "     " + usernamevalue +  '<span>' + hours + ":" + minutes + '</span>' + '</p>';

  
});

    </script>

    

</body>
</html>